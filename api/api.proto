syntax = "proto3";

package magnetite.api;

message AddTorrentRequest {
    oneof torrent_file {
        // the whole torrent in a bytestring
        bytes bytes = 1;

        // can be HTTP(s) or Magnet, maybe more in the future
        string uri = 2;
    }
    
    oneof backing_file {
        TorrentDataSourceMultiFile multifile = 128;

        TorrentDataSourceTome tome = 129;

        TorrentDataSourceRemoteMagnetite remote = 130;
    }

    bytes crypto_key = 1024;
}

message TorrentDataSourceMultiFile {
    string base_path = 1;
}

message TorrentDataSourceTome {
    string file_path = 1;
}

// can't specify multiple upstreams now - just registers the torrent, so no
// fields are included.
message TorrentDataSourceRemoteMagnetite {

}

message AddTorrentResponse {
    bytes info_hash = 1;
}

message RemoveTorrentRequest {
    bytes info_hash = 1;
}

message RemoveTorrentResponse {
}

message ListTorrentsRequest {
}

message ListTorrentsResponse {
    repeated TorrentEntry entries = 1;
}

message TorrentEntry {
    bytes info_hash = 1;
    string name = 2;
    uint64 size_bytes = 3;
}

service TorrentHost {
    rpc AddTorrent(AddTorrentRequest) returns (AddTorrentResponse) {}

    rpc RemoveTorrent(RemoveTorrentRequest) returns (RemoveTorrentResponse) {}

    rpc ListTorrents(ListTorrentsRequest) returns (ListTorrentsResponse) {}
}
